apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flair-cache.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "flair-cache.name" . }}
    helm.sh/chart: {{ include "flair-cache.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flair-cache.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "flair-cache.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FLAIR_COMPONENT
              value: "flair-cache"
{{- if .Values.env }}
    {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
    {{- end}}
{{- end }}
{{- if .Values.secretEnv.keys }}
    {{- range .Values.secretEnv.keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secretEnv.name }}
                  key: {{ . }}
    {{- end}}
{{- end }}
          ports:
            - name: cache
              containerPort: 6565
              protocol: TCP
            - name: health
              containerPort: 12355
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: health
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: health
            initialDelaySeconds: 30
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if .Values.secretMountName }}
          volumeMounts:
            - name: secrets
              mountPath: "/opt/flair/secrets"
              readOnly: true
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.secretMountName }}
      volumes:
        - name: secrets
          secret:
            secretName: {{ .Values.secretMountName }}
    {{- end }}
